{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Restaurant API",
    "description": "API to retrieve data for a restaurant"
  },
  "host": "restaurant-api-foodiny.herokuapp.com",
  "basePath": "",
  "tags": [{
      "name": "Reviews",
      "description": "Make requests to get data related to the stored reviews"
    },
    {
      "name": "Users",
      "description": "Make requests to get data related to the user (login)"
    },
    {
      "name": "Menu",
      "description": "Make requests to get data related to menu items"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {},
  "paths": {
    "/reviews/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all available reviews",
        "description": "Make a GET request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Create a new review (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a POST request to the database",
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "description": "Make sure that \"email\", \"city\", \"state\" are all lowercase.",
          "schema": {
            "type": "object",
            "properties": {
              "firstName": {
                "example": "John"
              },
              "lastName": {
                "example": "Doe"
              },
              "phone": {
                "example": "\"1234567890\""
              },
              "email": {
                "example": "johndoe@test.com"
              },
              "review": {
                "example": "The food was great! I liked the..."
              },
              "stars": {
                "example": "\"4\""
              },
              "city": {
                "example": "rexburg"
              },
              "state": {
                "example": "idaho"
              }
            }
          }
        }],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get a single review by using its ID",
        "description": "Make a POST request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Make sure your are using a valid ID format.",
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["Reviews"],
        "summary": "Update a single review by using its ID (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a PUT request to the database",
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Make sure your are using a valid ID format.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "phone": {
                  "example": "\"1234567890\""
                },
                "email": {
                  "example": "johndoe@test.com"
                },
                "review": {
                  "example": "The food was great! I liked the..."
                },
                "stars": {
                  "example": "\"4\""
                },
                "city": {
                  "example": "rexburg"
                },
                "state": {
                  "example": "idaho"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete a single review by using its ID (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a DELETE request to the database",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Make sure your are using a valid ID format.",
          "type": "string"
        }],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/state/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all available reviews under available states",
        "description": "Make a GET request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "state",
          "in": "query",
          "description": "Select one of the available states for filtering",
          "required": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["california", "utah", "idaho", "Texas"],
            "default": "california"
          },
          "collectionFormat": "multi"
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/email/{email}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all available reviews under specified email",
        "description": "Make a GET request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "email",
          "in": "path",
          "required": true,
          "description": "Type the desired email in lowercase",
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{email}/{city}/{state}": {
      "put": {
        "tags": ["Reviews"],
        "summary": "Update an existing review with specific email, city, state (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a PUT request to the database",
        "parameters": [{
            "name": "email",
            "in": "path",
            "required": true,
            "description": "This could be useful when filtering data",
            "type": "string"
          },
          {
            "name": "city",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "phone": {
                  "example": "\"1234567890\""
                },
                "email": {
                  "example": "johndoe@test.com"
                },
                "review": {
                  "example": "The food was great! I liked the..."
                },
                "stars": {
                  "example": "\"4\""
                },
                "city": {
                  "example": "rexburg"
                },
                "state": {
                  "example": "idaho"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete an existing review with specific email, city, state (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a DELETE request to the database",
        "parameters": [{
            "name": "email",
            "in": "path",
            "required": true,
            "description": "This could be useful when the user desires to delete its review.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menu/": {
      "get": {
        "tags": ["Menu"],
        "summary": "Get all available menu items",
        "description": "Make a GET request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Menu"],
        "summary": "Create a new menu item (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a POST request to the database",
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "description": "Images are stored as: [something]",
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "example": "Shrimp Tacos"
              },
              "description": {
                "example": "Loaded with plump juicy shrimp, crisp cabbage, avocado, cotija cheese, cilantro and our secret taco sauce that will win you over."
              },
              "calories": {
                "example": "\"750\""
              },
              "price": {
                "example": "\"15.99\""
              },
              "image": {
                "example": "Yes"
              }
            }
          }
        }],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menu/{id}": {
      "get": {
        "tags": ["Menu"],
        "summary": "Get a single menu item by using its ID",
        "description": "Make a GET request to the database",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Make sure your are passing a valid ID format.",
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["Menu"],
        "summary": "Update a single review by using its ID (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a PUT request to the database",
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Make sure your are passing a valid ID format.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Shrimp Tacos"
                },
                "description": {
                  "example": "Loaded with plump juicy shrimp, crisp cabbage, avocado, cotija cheese, cilantro and our secret taco sauce that will win you over."
                },
                "calories": {
                  "example": "\"750\""
                },
                "price": {
                  "example": "\"15.99\""
                },
                "image": {
                  "example": "Yes"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Menu"],
        "summary": "Delete a single menu item by using its ID (REQUIERES USERS TO BE LOGGED IN)",
        "description": "Make a DELETE request to the database",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Make sure your are passing a valid ID format.",
          "type": "string"
        }],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get the status of the users",
        "description": "Make a GET request that would show \"Logged In\" or \"Logged Out\"",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get the profile data of the user",
        "description": "Make a GET request that would show the nickname, name, picture, last update date, and email of the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "test": {},
  "definitions": {
    "reviews": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "review": {
          "type": "string"
        },
        "stars": {
          "type": "string",
          "enum": ["1", "2", "3", "4", "5"]
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "menu": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "calories": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "image": {
          "type": "base64??"
        }
      }
    },
    "users": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "hashed string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Future link [not currently being used]",
    "url": "http://swagger.io"
  }
}